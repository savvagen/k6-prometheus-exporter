version: '3.8'
services:

  grafana:
    image: grafana/grafana:7.2.1
    container_name: grafana
    hostname: grafana
    ports:
      - "3000:3000"
    networks:
      - grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_INSTALL_PLUGINS=michaeldmoore-multistat-panel,grafana-piechart-panel,yesoreyeram-boomtable-panel
    volumes:
      - grafana:/var/lib/grafana
      - ./metrics/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./metrics/grafana/dashboards:/etc/grafana/provisioning/dashboards
    restart: always

  prometheus:
    image: prom/prometheus:v2.22.0
    container_name: prometheus
    restart: always
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=90d'
    volumes:
      - ./metrics/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      # - ./metrics/prometheus/rules/hosts_rules.yml:/etc/prometheus/hosts_rules.yml
    ports:
      - 9090:9090
    networks:
      - k6
      - grafana

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    ports:
      - 9100:9100

  json-server:
    image: savvagenchevskiy/json-server:latest
    container_name: json-server
    networks:
      - k6
    ports:
      - "3001:3000"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 300M
        reservations:
          cpus: '0.5'
          memory: 150M

  k6:
    image: loadimpact/k6:latest
    container_name: k6
    ports:
      - "6565:6565"
    networks:
      - k6
    environment:
      - BASE_URL=http://json-server:3000
    volumes:
      - ./:/test
    working_dir: "/test"
    entrypoint: [ "k6", "run",  "test/load.test.js", "--address", "0.0.0.0:6565" ]

  k6_exporter:
    image: savvagenchevskiy/k6-exporter:latest
    container_name: k6_exporter
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - k6
    #network_mode: host
    ports:
      - 9091:9091
    environment:
      - METRICS_PORT=9091
      - COLLECT_INTERVAL=10
      - K6_SERVER=http://k6:6565
    depends_on:
      - k6

networks:
  k6:
  grafana:

volumes:
  grafana: